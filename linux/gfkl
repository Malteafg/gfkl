partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1] = "wokmok";
    include "level3(ralt_switch)"
    include "level5(caps_switch)"
 
    key.type[Group1] = "EIGHT_LEVEL";


    // UPPER ROW ===================================================================================
    key<AD01> {
        [q, Q, bracketleft, NoSymbol, XF86AudioPlay],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), Redirect(key=<I208>, clearmods=all)
        ]
    };
    key<AD02> {
        [c, C, braceleft, NoSymbol, XF86AudioPrev],
			  actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), Redirect(key=<I173>, clearmods=all)
        ]
    };
    key<AD03> {
        [l, L, braceright, NoSymbol, XF86AudioNext],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), Redirect(key=<I171>, clearmods=all)
        ]
    };
    key<AD04> {
        [m, M, bracketright, NoSymbol, XF86AudioMute],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),	Redirect(key=<MUTE>, clearmods=all)
        ]
    };
    key<AD05> {
        [k, K, asciicircum, NoSymbol, XF86AudioRaiseVolume],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),	Redirect(key=<VOL+>, clearmods=all)
        ]
    };
    key<AD06> {
        [NoSymbol, NoSymbol]
    };
    key<AD07> {
        [z, Z, NoSymbol, NoSymbol, Page_Up, Page_Up],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <PGUP>, clearmods = all),
            Redirect(key = <PGUP>, clearmods = all)
        ]
    };
    key<AD08> {
        [f, F, plus, NoSymbol, Home, Home]
    };
    key<AD09> {
        [u, U, parenleft, NoSymbol, Left, Left, F10, F10],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), 
            Redirect(key = <LEFT>, mods = Control, clearmods = LevelFive),
            Redirect(key = <LEFT>, mods = Control + Shift, clearmods = LevelFive),
            Redirect(key = <FK10>, clearmods = all),
            Redirect(key = <FK10>, clearmods = all)
        ]
    };
    key<AD10> {
        [y, Y, parenright, NoSymbol, Right, Right, F11, F11],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), 
            Redirect(key = <RGHT>, mods = Control, clearmods = LevelFive),
            Redirect(key = <RGHT>, mods = Control + Shift, clearmods = LevelFive),
            Redirect(key = <FK11>, clearmods = all),
            Redirect(key = <FK11>, clearmods = all)
        ]
    };
    key<AD11> {
        [equal, backslash, equal, backslash, End, End, F12, F12],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <FK12>, clearmods = all),
            Redirect(key = <FK12>, clearmods = all)
        ]
    };
    key<AD12> {
        [minus, apostrophe, minus, apostrophe]
    };

    // MIDDLE ROW ==================================================================================
    key<AC01> {
        [a, A, 1, exclam, NoSymbol, NoSymbol, F1, F1],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), 
            Redirect(key = <LCTL>, mods = Control + Shift, clearmods = LevelFive),
            Redirect(key = <LCTL>, mods = Control + Shift, clearmods = LevelFive),
            Redirect(key = <FK01>, clearmods = all),
            Redirect(key = <FK01>, clearmods = all)
        ]
    };
    key<AC02> {
        [s, S, 2, at, NoSymbol, NoSymbol, F2, F2],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), 
            Redirect(key = <LCTL>, mods = Control, clearmods = LevelFive),
            Redirect(key = <LCTL>, mods = Control, clearmods = LevelFive),
            Redirect(key = <FK02>, clearmods = all),
            Redirect(key = <FK02>, clearmods = all)
        ]
    };
    key<AC03> {
        [r, R, 3, numbersign, NoSymbol, NoSymbol, F3, F3],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <AB02>, mods = Control, clearmods = LevelFive),
            Redirect(key = <AB02>, mods = Shift + Control, clearmods = LevelFive),
            Redirect(key = <FK03>, clearmods = all),
            Redirect(key = <FK03>, clearmods = all)
        ]
    };
    key<AC04> {
        [t, T, 4, dollar, NoSymbol, NoSymbol, F4, F4],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), 
            Redirect(key = <AC04>, mods = Control, clearmods = LevelFive),
            Redirect(key = <AC04>, mods = Shift + Control, clearmods = LevelFive),
            Redirect(key = <FK04>, clearmods = all),
            Redirect(key = <FK04>, clearmods = all)
        ]
    };
    key<AC05> {
        [g, G, percent, NoSymbol, XF86AudioLowerVolume],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), Redirect(key=<VOL->, clearmods=all)
        ]
    };
    key<AC06> {
        [NoSymbol, NoSymbol]
    };
    key<AC07> {
        [p, P, asterisk, NoSymbol, Page_Down, Page_Down],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <PGDN>, clearmods = all),
            Redirect(key = <PGDN>, clearmods = all)
        ]
    };
    key<AC08> {
        [n, N, 7, asciitilde, Down, Down, F7, F7],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <FK07>, clearmods = all),
            Redirect(key = <FK07>, clearmods = all)
        ]
    };

    key<AC09> {
        [e, E, 8, ampersand, Up, Up, F8, F8],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <FK08>, clearmods = all),
            Redirect(key = <FK08>, clearmods = all)
        ]
    };
    key<AC10> {
        [i, I, 9, bar, Right, Right, F9, F9],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <FK09>, clearmods = all),
            Redirect(key = <FK09>, clearmods = all)
        ]
    };
    key<AC11> {
        [o, O, 0, grave, BackSpace, BackSpace, BackSpace, BackSpace]
    };
    key<BKSL> {
        [underscore, quotedbl, underscore, quotedbl, Delete, Delete, Delete, Delete]
    };


    // LOWER ROW ===================================================================================
//    key<LSGT> {
//        [slash, question, slash, question, Caps_Lock, Caps_Lock],
//        actions[Group1]=[
//            NoAction(), NoAction(), NoAction(), NoAction(), LockMods(mods=Lock), LockMods(mods=Lock)
//        ]
//    };
    key<LSGT> {
        [Shift_L, X, Shift_L, NoSymbol, Shift_L, Shift_L, Shift_L, Shift_L]
    };
    key<AB01> {
        [v, V, less, NoSymbol, Undo, Redo],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <AD07>, mods = Control, clearmods = LevelFive), 
            Redirect(key = <AD07>, mods = Shift + Control, clearmods = LevelFive)
        ]
    };

    key<AB02> {
        [w, W, greater, NoSymbol, XF86Cut, XF86Cut],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <AB06>, mods = Control, clearmods = LevelFive), 
            Redirect(key = <AB06>, mods = Shift + Control, clearmods = LevelFive)
        ]
    };
    key<AB03> {
        [d, D, 5, NoSymbol, XF86Copy, XF86Copy, F5, F5],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <AD02>, mods = Control, clearmods = LevelFive), 
            Redirect(key = <AD02>, mods = Shift + Control, clearmods = LevelFive),
            Redirect(key = <FK05>, clearmods = all),
            Redirect(key = <FK05>, clearmods = all)
        ]
    };
    key<AB04> {
        [j, J, NoSymbol, NoSymbol, XF86Paste, XF86Paste],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <AB01>, mods = Control, clearmods = LevelFive), 
            Redirect(key = <AB01>, mods = Shift + Control, clearmods = LevelFive)
        ]
    };
    key<AB05> {
        [NoSymbol, NoSymbol, NoSymbol, NoSymbol]
    };
    key<AB06> {
        //[x, X, NoSymbol, NoSymbol]
        [NoSymbol, NoSymbol]
    };
    key<AB07> {
        [b, B, NoSymbol, NoSymbol, Caps_Lock, Caps_Lock],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), LockMods(mods=Lock), LockMods(mods=Lock)
        ]
    };
    key<AB08> {
        [h, H, 6, NoSymbol, Left, Left, F6, F6],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <FK06>, clearmods = all),
            Redirect(key = <FK06>, clearmods = all)
        ]
    };
    key<AB09> {
        [comma, semicolon, comma, semicolon, BackSpace, BackSpace, BackSpace, BackSpace],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <BKSP>, mods = Control, clearmods = LevelFive),
            Redirect(key = <BKSP>, mods = Control, clearmods = LevelFive),
            Redirect(key = <BKSP>, mods = Control, clearmods = LevelFive),
            Redirect(key = <BKSP>, mods = Control, clearmods = LevelFive)
        ]
    };
    key<AB10> {
        [period, colon, period, colon, Delete, Delete, Delete, Delete],
        actions[Group1]=[
            NoAction(), NoAction(), NoAction(), NoAction(),
            Redirect(key = <DELE>, mods = Control, clearmods = LevelFive),
            Redirect(key = <DELE>, mods = Control, clearmods = LevelFive),
            Redirect(key = <DELE>, mods = Control, clearmods = LevelFive),
            Redirect(key = <DELE>, mods = Control, clearmods = LevelFive)
        ]
    };
    key<RTSH> {[Shift_R, question, Shift_R, NoSymbol, Shift_R, Shift_R, Shift_R, Shift_R]};

    // FIX MODIFIERS ===============================================================================
    key<TLDE> {[NoSymbol, NoSymbol]};
    //key<TAB>  {[Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L]};
    key<TAB>  {[Tab, Tab]};
    key<LFSH> {[Alt_L, Alt_L, Alt_L, Alt_L, Alt_L, Alt_L, Alt_L, Alt_L]};
    key<LCTL> {[Tab, Tab], actions[Group1] = [NoAction(), Redirect(key = <LCTL>, mods = Shift)]};
    key<LALT> {[Super_L, Super_L, Super_L, Super_L, Super_L, Super_L, Super_L, Super_L]};
    //key<BKSP> {[space, space]};
    //key<SPCE> {[Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L, Shift_L]};
    key<RCTL> {[Return, Return]};
    key<LWIN> {
        [Control_L, Control_L, Control_L, Control_L, Control_L, Control_L, Control_L, Control_L]
    };
    key<RTRN> {
        [Control_R, Control_R, Control_R, Control_R, Control_R, Control_R, Control_R, Control_R]
    };

    // NUMBERS FOR GAMING
    key<AE01> {[1, NoSymbol]};
    key<AE02> {[2, NoSymbol, U00E6, U00C6]};
    key<AE03> {[3, NoSymbol, U00F8, U00D8]};
    key<AE04> {[4, NoSymbol, U00E5, U00C5]};
    key<AE05> {[5, NoSymbol]};
    key<AE06> {[6, NoSymbol]};
    key<AE07> {[7, NoSymbol]};
    key<AE08> {[8, NoSymbol]};
    key<AE09> {[9, NoSymbol]};
    key<AE10> {[0, NoSymbol]};

    // DISABLE UPPER ROW
    key<AE11> {[x, NoSymbol]};
    key<AE12> {[slash, NoSymbol]};
};

// dead_macron: on AltGr-minus
// dead_breve: on AltGr-parenleft
// dead_abovedot: on AltGr-period
// dead_abovering: on AltGr-0
// dead_doubleacute: on AltGr-equal (as quotedbl is already used)
// dead_caron: on AltGr-less (AltGr-shift-comma)
// dead_cedilla: on AltGr-comma
// dead_ogonek: on AltGr-semicolon
// dead_belowdot: on AltGr-underscore (AltGr-shift-minus)
// dead_hook: on AltGr-question
// dead_horn: on AltGr-plus (AltGr-shift-equal)
// dead_diaeresis: on AltGr-colon (Alt-shift-semicolon)
//
// those were already there:
// dead_grave
// dead_acute
// dead_circumflex
// dead_tilde
// dead_diaeresis
